<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <jenkins.triggers.ReverseBuildTrigger>
          <spec></spec>
          <upstreamProjects></upstreamProjects>
          <threshold>
            <name>SUCCESS</name>
            <ordinal>0</ordinal>
            <color>BLUE</color>
            <completeBuild>true</completeBuild>
          </threshold>
        </jenkins.triggers.ReverseBuildTrigger>
        <hudson.triggers.TimerTrigger>
          <spec></spec>
        </hudson.triggers.TimerTrigger>
        <hudson.triggers.SCMTrigger>
          <spec></spec>
          <ignorePostCommitHooks>false</ignorePostCommitHooks>
        </hudson.triggers.SCMTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3883.vb_3ff2a_e3eea_f">
    <script>pipeline {
    agent {label &apos;agent1&apos;}

    stages {
        stage(&apos;CHECKOUT&apos;) {
            steps {
               echo &quot;Getting Project from Git&quot;; 
                git branch: &quot;main&quot;, 
                    url: &quot;https://github.com/raniabns/ski-devops.git&quot;
                    //credentialsId: &quot;git-jenkins-credentials&quot;; 
            }
        }
         stage(&apos;Build Artifact&apos;) {
            steps {
                sh &apos;mvn package -DskipTests&apos;
               
                
            }
        }
   

        stage(&apos;Build Docker image&apos;) {
            steps {
                sh &apos;docker build -app-container .&apos;
               
                
            }
        }
        
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>